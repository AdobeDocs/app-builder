{"version":3,"file":"component---src-pages-guides-app-builder-guides-optimization-md-672d58eed60a8d24fb50.js","mappings":"iTAMaA,EAAe,CAAC,EACvBC,EAAc,CAClBD,gBAEIE,EAAYC,EAAAA,EACH,SAASC,EAAUC,GAG/B,IAHgC,WACjCC,GAEDD,EADIE,GAAKC,EAAAA,EAAAA,GAAAH,EAAAI,GAER,OAAOC,EAAAA,EAAAA,KAACR,GAASS,EAAAA,EAAAA,GAAA,GAAKV,EAAiBM,EAAK,CAAED,WAAYA,EAAYM,QAAQ,eAG5EF,EAAAA,EAAAA,KAAA,MACE,GAAM,+BACJ,gCACJA,EAAAA,EAAAA,KAAA,SAAI,oMACJA,EAAAA,EAAAA,KAAA,MACE,GAAM,0BACJ,2BACJA,EAAAA,EAAAA,KAAA,SAAI,oaACJA,EAAAA,EAAAA,KAAA,SAAI,oCAAmCA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,iBAA8B,kJAAiJH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,mBAAgC,QAAOH,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,oBAAiC,sEAClXH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,uBACX,+MAUNH,EAAAA,EAAAA,KAAA,SAAI,6HAA4HA,EAAAA,EAAAA,KAAA,cAAYG,WAAW,KAAK,iBAA8B,oDAC1LH,EAAAA,EAAAA,KAAA,MACE,GAAM,qCACJ,sCACJA,EAAAA,EAAAA,KAAA,SAAI,6CAA4CA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC1D,KAAQ,wCACN,2BAA+B,mHAAkHH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACjK,KAAQ,0CACN,yBAA6B,uBAAsBH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACnE,KAAQ,6EACN,6CAAiD,aAAYH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC7E,KAAQ,0FACN,gCAAoC,mBAAkBH,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACtE,KAAQ,gEACN,0BAA8B,yDACpCH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,uBACX,2XAYNH,EAAAA,EAAAA,KAAA,MACE,GAAM,8DACJ,+DACJA,EAAAA,EAAAA,KAAA,SAAI,qBAAoBA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAClC,KAAQ,0CACN,yBAA6B,8LACnCH,EAAAA,EAAAA,KAAA,SAAI,sEACJA,EAAAA,EAAAA,KAAA,WACEA,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,0NACrBH,EAAAA,EAAAA,KAAA,MAAIG,WAAW,MAAM,2EAEvBH,EAAAA,EAAAA,KAAA,SAAI,0FAAyFA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IACvG,KAAQ,0CACN,yBAA6B,iBACnCH,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,uBACX,k3BAuBNH,EAAAA,EAAAA,KAAA,SAAI,kCACJA,EAAAA,EAAAA,KAAA,YAAKA,EAAAA,EAAAA,KAAA,QAAMG,WAAW,MAClB,UAAa,uBACX,4fAONH,EAAAA,EAAAA,KAAA,MACE,GAAM,aACJ,cACJA,EAAAA,EAAAA,KAAA,SAAI,cAAaA,EAAAA,EAAAA,KAAA,KAAGG,WAAW,IAC3B,KAAQ,eACN,gBAAoB,KAG9B,CAEAT,EAAWU,gBAAiB,C","sources":["webpack://adobe-developer-app-builder/./src/pages/guides/app_builder_guides/optimization.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/app-builder/app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"optimizing-app-builder-apps\"\n    }}>{`Optimizing App Builder Apps`}</h1>\n    <p>{`There are many ways to optimize a web app: for security, performance, or operational cost, to name a few. Here are some techniques to help you get the most from your App Builder applications.`}</p>\n    <h2 {...{\n      \"id\": \"caching-http-responses\"\n    }}>{`Caching HTTP responses`}</h2>\n    <p>{`This method works extremely well if your action returns some results based on repeated user inputs as query params, for example details about a webshop item or visualization of static data. In such cases your back-end action is invoked once only: subsequent requests receive results directly from the cache by the expiry time. Serving results from cache is not only faster, but saves the cost of action invocations.`}</p>\n    <p>{`To configure the cache, use the `}<inlineCode parentName=\"p\">{`Cache-Control`}</inlineCode>{` directive. Below is an example of an action that sets the cache with a TTL of 30 minutes. In the response object you will find an entry with `}<inlineCode parentName=\"p\">{`X-GW-Cache: HIT`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`X-GW-Cache: MISS`}</inlineCode>{`, depending on whether the answer was returned from cache or not.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`async function main (params) {\n  return {\n      headers: {\n        'Cache-Control': 'max-age=1800'\n      },\n      statusCode: 200,\n      body: { message: 'I am cached for 30 minutes.' }\n  }\n}\n`}</code></pre>\n    <p>{`When you test this functionality for web action using Postman or a web browser with Developer tools opened, be sure that `}<inlineCode parentName=\"p\">{`Cache-Control`}</inlineCode>{` is not set automatically for all the requests.`}</p>\n    <h2 {...{\n      \"id\": \"returning-large-response-payloads\"\n    }}>{`Returning large response payloads`}</h2>\n    <p>{`An Adobe I/O Runtime action can return a `}<a parentName=\"p\" {...{\n        \"href\": \"../runtime_guides/system_settings.md\"\n      }}>{`response payload of 1MB`}</a>{` - enough for most use cases. If your action will return a larger payload, we provide a scalable solution with `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-files\"\n      }}>{`App Builder Files SDK`}</a>{`. It allows you to `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-files/blob/master/doc/api.md#Files+write\"\n      }}>{`persist a binary file to the blob storage`}</a>{`, obtain `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-files/blob/master/doc/api.md#Files+generatePresignURL\"\n      }}>{`a temporary downloadable URL`}</a>{` and return an `}<a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/302\"\n      }}>{`HTTP Redirect response`}</a>{` to the file with this URL. Here is a demonstration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const fileLocation = '/private-dir/large-image.png'\nconst files = await Files.init()\nawait files.write(fileLocation, fileContent)\n\n// Generate a presigned URL of the file that is valid for 60 seconds only\nconst presignUrl = await files.generatePresignURL(fileLocation, { expiryInSeconds: 60 })\n\nreturn {\n  headers: { location: presignUrl }, \n  statusCode: 302\n}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"implementing-move-operations-for-the-app-builder-files-sdk\"\n    }}>{`Implementing move operations for the App Builder Files SDK`}</h2>\n    <p>{`When using using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-files\"\n      }}>{`App Builder Files SDK`}</a>{` to handle large files within a Runtime action, you may need to move those files to another location in the underlying cloud storage, for example to archive them when computing is over.`}</p>\n    <p>{`We have not exposed a move operation in our abstraction, because:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Some cloud storage APIs do not offer an atomic move operation, forcing a tradeoff between abstraction and consistency. Users might expect files operations on single files and folders to be atomic when they're not.`}</li>\n      <li parentName=\"ul\">{`It's easy to implement and test the abstraction at application level.`}</li>\n    </ul>\n    <p>{`Here is our recommendation to implement the move operation at application level using `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/adobe/aio-lib-files\"\n      }}>{`App Builder Files SDK`}</a>{` primitives:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/**\n * Note: this operation is not atomic.\n * Moves files from one location to another in the remote storage. \n *  \n * @param {Files} files the files instance\n * @param {string} src source file/folder\n * @param {string} dest destination file/folder\n * @param {object} [options={}] move options\n * @param {Function} [options.progressCallback] a function that will be called every\n *   time the operation completes on a single file, the srcPath and destPath to the moved\n *   file are passed as argument to the callback \\`progressCallback(srcPath, destPath)\\`\n */\nasync function move (files, src, dest, options = {}) {\n  try {\n    const res = await files.copy(src, dest, { progressCallback: options.progressCallback })\n    await files.delete(src)\n    return res\n  } catch (e) {\n    e.message = \\`Move operation failed, reason: \\${e.message}\\`\n    throw e\n  }\n}\n`}</code></pre>\n    <p>{`Here are some usage examples:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const files = await Files.init()\nawait move(files, 'my/remote/src/folder/', 'my/remote/dest/')\nawait move(files, 'my/remote/src/folder/file.txt', 'my/remote/dest/file2.md') // will move and rename the file\nawait move(files, 'my/remote/src/folder/file.txt', 'my/remote/dest/') // will move file.txt to dest folder\nawait move(files, 'my/remote/src/folder/', 'my/remote/dest/') // move folder to the dest folder\nawait move(files, 'my/remote/folder/', 'my/remote/dest') // will rename folder to dest\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"next-step\"\n    }}>{`Next step`}</h2>\n    <p>{`Return to `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`Guides Index`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}