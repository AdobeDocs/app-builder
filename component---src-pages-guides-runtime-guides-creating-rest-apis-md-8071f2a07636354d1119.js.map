{"version":3,"file":"component---src-pages-guides-runtime-guides-creating-rest-apis-md-8071f2a07636354d1119.js","mappings":"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","sources":["webpack://adobe-developer-app-builder/./src/pages/guides/runtime_guides/creating_rest_apis.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/app-builder/app-builder/node_modules/@adobe/gatsby-theme-aio/src/components/MDXFilter/index.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"creating-rest-apis\"\n    }}>{`Creating REST APIs`}</h1>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: IO Runtime cleans up custom APIs that have not been accessed for 90 days.`}</p>\n    </blockquote>\n    <p>{`This tutorial shows how to create REST APIs from web actions deployed to Adobe I/O Runtime. It starts with the assumption that you've created and deployed four web actions to manage CRUD operations for the `}<inlineCode parentName=\"p\">{`pet`}</inlineCode>{` entity:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CRUD Operation`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action Name`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Create`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Read`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`getPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Update`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`updatePet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Delete`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deletePet`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`You can map these actions to a REST API for managing `}<inlineCode parentName=\"p\">{`pet`}</inlineCode>{` resources:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Endpoint`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`HTTP Method`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Action Nam`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`POST`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`addPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GET`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`getPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet/{id}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`GET`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`getPet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet/{id}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`PUT`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`updatePet`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`/pet/{id}`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`DELETE`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`deletePet`}</inlineCode></td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{` This is how to do it:`}</p>\n    <h2 {...{\n      \"id\": \"using-aio-cli\"\n    }}>{`Using aio CLI`}</h2>\n    <p>{`Using the `}<inlineCode parentName=\"p\">{`aio rt:api:create`}</inlineCode>{` command, you create API endpoints one by one. The command allows you to set a base path, path, method, and response type, like this:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`aio rt:api:create /pet-store /pet post createPet --response-type http\naio rt:api:create /pet-store /pet get getPet --response-type http\naio rt:api:create /pet-store /pet/{id} get getPet --response-type http\naio rt:api:create /pet-store /pet/{id} put updatePet --response-type http\naio rt:api:create /pet-store /pet/{id} delete deletePet --response-type http\n`}</code></pre>\n    <p>{`See the API you defined with its fully qualified path by running this command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`aio rt:api:list /pet-store\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note:  `}<inlineCode parentName=\"p\">{`aio rt:api:list`}</inlineCode>{` is not implemented; instead, please use `}<inlineCode parentName=\"p\">{`aio rt:api:list/enter-base-path`}</inlineCode>{`.`}</p>\n    </blockquote>\n    <p>{`Here is an example of a call to one of the endpoints:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl https://adobeioruntime.net:443/apis/<YOUR-NAMESPACE>/pet-store/pet/2345 -X get\n`}</code></pre>\n    <p>{`or`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`curl https://<YOUR-NAMESPACE>.adobeioruntime.net:443/apis/pet-store/pet/2345 -X GET\n`}</code></pre>\n    <p>{`In this example, the `}<inlineCode parentName=\"p\">{`{di}`}</inlineCode>{` value, 2335, will be mapped to a {payload.id}.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><strong parentName=\"p\">{`Note`}</strong>{` that this URL differs from what `}<inlineCode parentName=\"p\">{`aio`}</inlineCode>{` returns. This is due to protections in Runtime that segregate namespaces from one another when invoking web actions. The `}<inlineCode parentName=\"p\">{`aio`}</inlineCode>{`-generated link will still work, but it will return a `}<inlineCode parentName=\"p\">{`308`}</inlineCode>{` redirect to your namespace's subdomain on Runtime. For a further discussion of this issue, please see `}<a parentName=\"p\" {...{\n          \"href\": \"securing_web_actions.md\"\n        }}>{`Securing Web Actions`}</a>{`.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"using-swagger-files\"\n    }}>{`Using Swagger files`}</h2>\n    <p>{`REST APIs support  Swagger files, both for creating REST APIs from scratch or saving APIs created using the `}<inlineCode parentName=\"p\">{`aio`}</inlineCode>{` CLI as Swagger definition files you can use later to restore the API.`}</p>\n    <p>{`Continuing the example above, this command creates a Swagger definition file on your machine from the pet-store API:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`aio rt:api:get /pet-store > pet-store-swagger.json\n`}</code></pre>\n    <p>{`To restore or create the same API, for example in some other namespace,  run:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`aio rt:api:create --config-file pet-store-swagger.json\n`}</code></pre>\n    <p>{`This will work provided that the actions are already created in that namespace.`}</p>\n    <h2 {...{\n      \"id\": \"enable-cors-on-an-http-resource\"\n    }}>{`Enable CORS on an HTTP resource`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS\"\n      }}>{`CORS`}</a>{` headers can be controlled either statically or dynamically.`}</p>\n    <h3 {...{\n      \"id\": \"static-cors-response-with-openapi\"\n    }}>{`Static CORS response with OpenAPI`}</h3>\n    <p>{`If the returned CORS headers can be static, no code is necessary. The REST APIs can be configured in OpenAPI 2.0 format, by defining the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` method. This code illustrates how to configure CORS headers:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"paths\": {\n    \"/test\": {\n      \"options\": {\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Default CORS response\",\n            \"headers\": {\n              \"Access-Control-Allow-Origin\": {\n                \"type\": \"string\",\n                \"description\": \"Which origin can invoke the /test API\\\\n\",\n                \"default\": \"https://xyz.example.com\"\n              },\n              \"Access-Control-Allow-Methods\": {\n                \"type\": \"string\",\n                \"description\": \"Which methods are allowed\\\\n\",\n                \"default\": \"GET, POST, PUT\"\n              }\n            }\n          }\n        }\n      }\n    }\n}\n`}</code></pre>\n    <p>{`Once the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` block is added to any HTTP resource, the system will respond with the configured headers and their corresponding `}<inlineCode parentName=\"p\">{`default`}</inlineCode>{` values. In this example the response will be:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` HTTP/1.1 204 No Content\n Access-Control-Allow-Methods: GET, POST, PUT\n Access-Control-Allow-Origin: https://xyz.example.com\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"dynamic-cors-response-with-custom-actions\"\n    }}>{`Dynamic CORS response with custom actions`}</h4>\n    <p>{`CORS headers can also be returned by a dedicated function, which must be configured to handle the `}<inlineCode parentName=\"p\">{`options`}</inlineCode>{` HTTP Method. It works in the same way as other HTTP Methods like `}<inlineCode parentName=\"p\">{`GET`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`POST`}</inlineCode>{`.`}</p>\n    <p>{`This code snippet demonstrates an action that returns a CORS response:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// save it as cors-action.js\nfunction main(params) {\n  return {\n    statusCode: 204,\n    headers: {\n      \"Access-Control-Allow-Origin\": \"https://xyz.example.com\",\n      \"Access-Control-Allow-Methods\": \"GET, POST, PUT\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`The web action must be created and configured for the CORS request:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio rt:action:create handleCorsRequest ./cors-action.js --web true -a web-custom-options true\n\naio rt:api:create /pet-store /pet options handleCorsRequest --response-type http\n`}</code></pre>\n    <p>{`To test the CORS request, get the URL of the action and invoke it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio rt:api:list /pet-store\n# get the URL for the options action and invoke it\ncurl -i -X OPTIONS https://adobeioruntime.net/...\n# it should return\n HTTP/1.1 204 No Content\n Access-Control-Allow-Methods: GET, POST, PUT\n Access-Control-Allow-Origin: https://xyz.example.com\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"securing-api-endpoints\"\n    }}>{`Securing API endpoints`}</h2>\n    <h3 {...{\n      \"id\": \"oauth-using-adobe-identity-management-system\"\n    }}>{`Oauth (using Adobe Identity Management System)`}</h3>\n    <p>{`An action can be configured to require IMS validation for incoming requests using the following command: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`aio rt:action:create <action_name> --web true -a require-gw-validation true\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"scopes-validation\"\n    }}>{`Scopes validation`}</h4>\n    <p>{`Once IMS authentication has been enabled for an action, the only way to allow access to it is by specifying a list of IMS scopes or client IDs permitted to invoke the action. `}</p>\n    <p>{`The following code snippet demonstrates how to configure access using a standard Swagger file and the `}<inlineCode parentName=\"p\">{`security`}</inlineCode>{` object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"basePath\": \"/v2\",\n    \"paths\": {\n      \"/ims-secure-endpoint\": {\n        \"get\": {\n          \"operationId\": \"your-namespaces/default/my-ims-secure-web-action.json\",        \n          \"security\": [\n            {\n              \"scopes_auth\": [\n                  \"write:pets\",\n                  \"read:pets\"\n                ]\n            }\n          ]\n        }\n      }\n    },\n    \"securityDefinitions\": {\n        \"scopes_auth\": {\n          \"type\": \"oauth2\",\n          \"authorizationUrl\": \"\",\n          \"flow\": \"implicit\",\n          \"scopes\": {\n            \"write:pets\": \"modify pets in your account\",\n            \"read:pets\": \"read your pets\"\n          }\n        }\n    }\n}\n`}</code></pre>\n    <p>{`This establishes scope validation for the API endpoint, allowing requests with access tokens that have the scopes `}<inlineCode parentName=\"p\">{`write:pets`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`read:pets`}</inlineCode>{`. Requests without the required scopes in the access token will be rejected with this error message: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"401015\",\n  \"message\":\"Scope mismatch\"\n}\n`}</code></pre>\n    <p>{`After publishing the Swagger file, this endpoint `}<inlineCode parentName=\"p\">{`your-namespaces/default/my-require-gw-validation-web-action`}</inlineCode>{` can be used to call the action: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl -i -H \"Authorization: Bearer <ims_access_token>\" https://guest.adobeioruntime.net/api/v2/ims-validation-endpoint\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"client-id-validation\"\n    }}>{`Client ID validation`}</h4>\n    <p><inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` validation can be established for an action by adding `}<inlineCode parentName=\"p\">{`x-client-ids`}</inlineCode>{` with a list of clients allowed to invoke it. The clientID list must be added to the `}<inlineCode parentName=\"p\">{`security definition`}</inlineCode>{` object in the Swagger. Be sure to add the security definition key to the method `}<inlineCode parentName=\"p\">{`security`}</inlineCode>{` object; otherwise the validation won't be enabled for that method: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"basePath\": \"/v2\",\n    \"paths\": {\n      \"/ims-validation-endpoint\": {\n        \"get\": {\n          \"operationId\": \"your-namespaces/default/my-require-gw-validation-web-action.json\",\n          \"security\": [\n            {\n              \"clientids_auth\": []\n            }\n          ]\n        }\n      }\n    },\n    \"securityDefinitions\": {\n        \"clientids_auth\": {\n          \"type\": \"oauth2\",\n          \"authorizationUrl\": \"\",\n          \"flow\": \"implicit\",\n          \"scopes\": {\n            \"write:pets\": \"modify pets in your account\",\n            \"read:pets\": \"read your pets\"\n          },\n          \"x-client-ids\": [\"zookeeper\", \"dogwalker\"]\n        }\n    }\n}\n`}</code></pre>\n    <p>{`This configuration allows the action to accept requests with access tokens that have the client IDs `}<inlineCode parentName=\"p\">{`zookeeper`}</inlineCode>{` OR `}<inlineCode parentName=\"p\">{`dogwalker`}</inlineCode>{`. Requests without the client ID in the access token will be rejected with this error message: `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"403201\",\n  \"message\":\"Client ID not allowed to call this service\"\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note that both `}<inlineCode parentName=\"p\">{`scope`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`client_id`}</inlineCode>{` validation can be enabled at the same time. If they are, the request will be rejected if the access token does not have both the required scope and client ID.`}</p>\n      <p parentName=\"blockquote\">{`If no validation is enabled for the endpoint's verb, by removing the `}<inlineCode parentName=\"p\">{`security`}</inlineCode>{` object from the method definition, the action can be invoked publicly without any restrictions on the API URL.`}</p>\n      <p parentName=\"blockquote\">{`By default, the IMS token validation URL will be used for token validation so \"authorizationUrl\" can be left empty. But if you want to use a different Oauth provider, you can specify the `}<inlineCode parentName=\"p\">{`authorizationUrl`}</inlineCode>{` in the `}<inlineCode parentName=\"p\">{`securityDefinition`}</inlineCode>{` object. Only one external security provider can be configured, and it must be defined in the first `}<inlineCode parentName=\"p\">{`securityDefinition`}</inlineCode>{` object in the Swagger file.`}</p>\n      <p parentName=\"blockquote\">{`Please allow five minutes for these changes to take effect.`}</p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"basic-authentication\"\n    }}>{`Basic authentication`}</h3>\n    <p>{`APIs are secured in the same way as web actions. You can read more about this in `}<a parentName=\"p\" {...{\n        \"href\": \"securing_web_actions.md\"\n      }}>{`Securing Web Actions`}</a>{`.`}</p>\n    <p>{`Once basic authentication is enabled for an action, it's necessary to pass the `}<inlineCode parentName=\"p\">{`X-Require-Whisk-Auth`}</inlineCode>{` header and the secret you chose when making an API call.`}</p>\n    <h3 {...{\n      \"id\": \"ip-allow-list--disallow-list\"\n    }}>{`IP Allow-list / Disallow-list`}</h3>\n    <p>{`Endpoints may also be configured to allow or block requests only from specific IP addresses. This can be done by adding the `}<inlineCode parentName=\"p\">{`x-ip-allowlist`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`x-ip-disallowlist`}</inlineCode>{` to the method definition as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"basePath\": \"/v2\",\n    \"paths\": {\n      \"/ip-validation-endpoint\": {\n        \"get\": {\n          \"operationId\": \"your-namespaces/default/my-require-gw-validation-web-action.json\",\n          \"x-ip-allowlist\": [\"192.150.10.210\", \"192.168.0.1\"],\n          \"x-ip-disallowlist\": [\"192.150.10.10\"]\n        }\n      }\n    }\n}\n`}</code></pre>\n    <p>{`This configuration allows the action to accept requests from clients with the IP addresses \"192.150.10.210\" or \"192.168.0.1\", and block requests from \"192.150.10.10\". `}</p>\n    <p>{`Requests that do not originate from the IP addresses on the whitelist will be rejected with this error message:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"403013\",\n  \"message\":\"Access from your IP address is not authorized\"\n}\n`}</code></pre>\n    <p>{`Requests that originate from the IP addresses on the disallow list will be rejected with this error message:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"error_code\":\"403012\",\n  \"message\":\"Access from your IP address is not authorized\"\n}\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Note: be sure the `}<inlineCode parentName=\"p\">{`my-require-gw-validation-web-action`}</inlineCode>{` is configured as a web action with `}<inlineCode parentName=\"p\">{`-a require-gw-validation true`}</inlineCode>{`, or the action can be accessed publicly with no restrictions on the non-API URL. `}</p>\n    </blockquote>\n    <h1 {...{\n      \"id\": \"how-long-does-it-take-to-create-or-update-an-api\"\n    }}>{`How long does it take to create or update an API?`}</h1>\n    <p>{`It can take up to five minutes to see the changes from creation or update of an API.`}</p>\n    <h2 {...{\n      \"id\": \"next-step\"\n    }}>{`Next step`}</h2>\n    <p>{`Return to `}<a parentName=\"p\" {...{\n        \"href\": \"../index.md\"\n      }}>{`Guides Index`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutProperties","_excluded","mdx","_extends","mdxType","parentName","isMDXComponent"],"sourceRoot":""}